{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_babel-loader@8.2.4@babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\src\\network\\request.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\src\\network\\request.js","mtime":1648867381950},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\babel.config.js","mtime":1648446710422},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_babel-loader@8.2.4@babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport nprogress from \"nprogress\";\nimport \"nprogress/nprogress.css\";\nexport function request(config) {\n  // 1.创建axios的实例\n  var instance = axios.create({\n    // baseURL: 'http://123.207.32.32:8000',\n    //新的接口地址:http://152.136.185.210:7878/api/hy66\n    baseURL: 'http://152.136.185.210:7878/api/hy66',\n    timeout: 5000\n  }); // 2.axios的拦截器\n  // 2.1.请求拦截的作用\n\n  instance.interceptors.request.use(function (config) {\n    nprogress.start();\n    return config;\n  }, function (err) {// console.log(err);\n  }); // 2.2.响应拦截\n\n  instance.interceptors.response.use(function (res) {\n    nprogress.done();\n    return res.data;\n  }, function (err) {\n    console.log(err);\n  }); // 3.发送真正的网络请求\n\n  return instance(config);\n}",{"version":3,"sources":["C:/Users/Administrator/Desktop/SuperMarket/supermarket/src/network/request.js"],"names":["axios","nprogress","request","config","instance","create","baseURL","timeout","interceptors","use","start","err","response","res","done","data","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC9B;AACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5B;AACA;AACAC,IAAAA,OAAO,EAAC,sCAHoB;AAI5BC,IAAAA,OAAO,EAAE;AAJmB,GAAb,CAAjB,CAF8B,CAS9B;AACA;;AACAH,EAAAA,QAAQ,CAACI,YAAT,CAAsBN,OAAtB,CAA8BO,GAA9B,CAAkC,UAAAN,MAAM,EAAI;AAC1CF,IAAAA,SAAS,CAACS,KAAV;AACA,WAAOP,MAAP;AACD,GAHD,EAGG,UAAAQ,GAAG,EAAI,CACR;AACD,GALD,EAX8B,CAkB9B;;AACAP,EAAAA,QAAQ,CAACI,YAAT,CAAsBI,QAAtB,CAA+BH,GAA/B,CAAmC,UAAAI,GAAG,EAAI;AACxCZ,IAAAA,SAAS,CAACa,IAAV;AACA,WAAOD,GAAG,CAACE,IAAX;AACD,GAHD,EAGG,UAAAJ,GAAG,EAAI;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACD,GALD,EAnB8B,CA0B9B;;AACA,SAAOP,QAAQ,CAACD,MAAD,CAAf;AACD","sourcesContent":["import axios from 'axios'\nimport nprogress from \"nprogress\"\nimport \"nprogress/nprogress.css\"\n\nexport function request(config) {\n  // 1.创建axios的实例\n  const instance = axios.create({\n    // baseURL: 'http://123.207.32.32:8000',\n    //新的接口地址:http://152.136.185.210:7878/api/hy66\n    baseURL:'http://152.136.185.210:7878/api/hy66',\n    timeout: 5000\n  })\n\n  // 2.axios的拦截器\n  // 2.1.请求拦截的作用\n  instance.interceptors.request.use(config => {\n    nprogress.start()\n    return config\n  }, err => {\n    // console.log(err);\n  })\n\n  // 2.2.响应拦截\n  instance.interceptors.response.use(res => {\n    nprogress.done()\n    return res.data\n  }, err => {\n    console.log(err);\n  })\n\n  // 3.发送真正的网络请求\n  return instance(config)\n}\n"]}]}