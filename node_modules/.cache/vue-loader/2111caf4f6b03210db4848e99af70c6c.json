{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\src\\components\\common\\scroll\\Scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\src\\components\\common\\scroll\\Scroll.vue","mtime":1648727363173},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_babel-loader@8.2.4@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BScroll from 'better-scroll'\n\nexport default {\n    name: \"Scroll\",\n    props: {\n        probeType: {\n            type: Number,\n            default: 0\n        },\n        pullUpLoad: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            scroll: null,\n            message: '哈哈哈'\n        }\n    },\n    mounted() {\n\n        // 1.创建BScroll对象\n        //BScroll有bug:如果是从PC端打开时，会被识别不是移动，而不会滑动\n        this.scroll = new BScroll(this.$refs.wrapper, {\n            click: true,\n            probeType: this.probeType,\n            pullUpLoad: this.pullUpLoad,\n            //用户控制Better-scroll需要刷新才能滚动的bug\n            disableTouch: false,\n            disableMouse: false\n        });\n\n        //打印scroll---发现问题---scroll的高度有时会刷不出来(scrollerHeight)\n        // console.log(this.scroll);\n        this.scroll.refresh()\n\n        // 2.监听滚动的位置\n        this.scroll.on('scroll', (position) => {\n            // console.log(position);\n\n            this.$emit('scroll', position)\n        });\n\n        // 3.监听上拉事件\n        if (this.pullUpLoad) {\n            this.scroll.on('pullingUp', () => {\n                this.$emit('pullingUp')\n                console.log(\"上拉加载更多\")\n            })\n        }\n    },\n    methods: {\n        scrollTo(x, y, time = 300) {\n            this.scroll.scrollTo(x, y, time)\n        },\n        finishPullUp() {\n            this.scroll.finishPullUp()\n        }\n    }\n}\n",{"version":3,"sources":["Scroll.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scroll.vue","sourceRoot":"src/components/common/scroll","sourcesContent":["<template>\n    <!-- better-scroll 只处理容器（wrapper）的第一个子元素（content）的滚动，其它的元素都会被忽略。-->\n    <div class=\"wrapper\" ref=\"wrapper\">\n        <div class=\"content\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    import BScroll from 'better-scroll'\n\n    export default {\n        name: \"Scroll\",\n        props: {\n            probeType: {\n                type: Number,\n                default: 0\n            },\n            pullUpLoad: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data() {\n            return {\n                scroll: null,\n                message: '哈哈哈'\n            }\n        },\n        mounted() {\n\n            // 1.创建BScroll对象\n            //BScroll有bug:如果是从PC端打开时，会被识别不是移动，而不会滑动\n            this.scroll = new BScroll(this.$refs.wrapper, {\n                click: true,\n                probeType: this.probeType,\n                pullUpLoad: this.pullUpLoad,\n                //用户控制Better-scroll需要刷新才能滚动的bug\n                disableTouch: false,\n                disableMouse: false\n            });\n\n            //打印scroll---发现问题---scroll的高度有时会刷不出来(scrollerHeight)\n            // console.log(this.scroll);\n            this.scroll.refresh()\n\n            // 2.监听滚动的位置\n            this.scroll.on('scroll', (position) => {\n                // console.log(position);\n\n                this.$emit('scroll', position)\n            });\n\n            // 3.监听上拉事件\n            if (this.pullUpLoad) {\n                this.scroll.on('pullingUp', () => {\n                    this.$emit('pullingUp')\n                    console.log(\"上拉加载更多\")\n                })\n            }\n        },\n        methods: {\n            scrollTo(x, y, time = 300) {\n                this.scroll.scrollTo(x, y, time)\n            },\n            finishPullUp() {\n                this.scroll.finishPullUp()\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}