{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\src\\views\\cart\\childComps\\CartBottomBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\src\\views\\cart\\childComps\\CartBottomBar.vue","mtime":1649237247091},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_babel-loader@8.2.4@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_cache-loader@2.0.1@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\SuperMarket\\supermarket\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CheckButton from \"../../../components/content/checkButton/CheckButton\";\n\nimport {mapGetters, mapMutations} from 'vuex';\n\nexport default {\n  name: \"CartBottomBar\",\n  props: {\n    isShowMessage: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    CheckButton\n  },\n  computed: {\n    ...mapGetters(['cartList']),\n    //1、计算总价\n    totalPrice() {\n      return this.cartList.filter((item) => {\n        return item.checked;\n      }).reduce((preValue, item) => {\n        return preValue + item.realPrice * item.count;\n      }, 0).toFixed(2)\n    },\n    //2、计算选中个数\n    checkLength() {\n      return this.cartList.filter((item) => {\n        return item.checked;\n      }).length;\n    },\n    //3、全选与单选的实现\n    isCheckAll() {\n      //every():一假即假 ，而且只要有一个元素是假，其后面的元素将不再遍历。\n      //some()：一真即真\n      // console.log('AllCheck');\n      if(this.cartList.length === 0) {\n        return false;\n      }\n      //1、使用filter\n      //return !(this.cartList.filter(item => item.checked).length);\n      //2、使用find\n      // return !this.cartList.find(item => item.checked);\n      //3、普通遍历\n      // for(let item of this.cartList) {\n      //   if(!item.checked) {\n      //     return false;\n      //   }\n      // }\n      // return true;\n      return this.cartList.every(item => item.checked);\n    }\n  },\n  methods: {\n    ...mapMutations([\"deleteProduct\"]),\n    //1、全选按钮\n    checkAllClick() {\n      //console.log('checkall');\n      //计算属性isCheckAll为true表示当前为全部选中状态，点击全选那就全部不选中\n      // if(this.isCheckAll) {\n      //   this.cartList.map(item => {\n      //     //修改store里面的数据一定要经过mutations，否则调试插件监控不到\n      //     this.$store.commit('updateChecked', {item, checked: false});\n      //   })\n      // }else {\n      //   this.cartList.map(item => {\n      //     this.$store.commit(\"updateChecked\", {item, checked: true});\n      //   })\n      // }\n      if(this.isCheckAll) { //全部选中\n        this.cartList.forEach(item => item.checked = false);\n      }else { // 部分或钻都不选中\n        this.cartList.forEach(item => item.checked = true);\n      }\n\n    },\n    //2、点击计算按钮\n    calculateClick() {\n      if(!this.isCheckAll) {\n         this.$toast.show('请选择默认的商品', 2000);\n      }\n    },\n    //3、点击取消\n    cancelClick() {\n\n    }\n  }\n}\n",{"version":3,"sources":["CartBottomBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CartBottomBar.vue","sourceRoot":"src/views/cart/childComps","sourcesContent":["<template>\n  <div id=\"bottom-bar\">\n    <div class=\"check-content\">\n      <check-button\n        class=\"check-btn\"\n        :is-checked=\"isCheckAll\"\n        @click.native=\"checkAllClick\"/>\n      <span>全选</span>\n    </div>\n    <div class=\"price\" v-show=\"!isShowMessage\">\n      合计：<span>￥{{totalPrice}}</span>\n    </div>\n    <div class=\"price price-cancel\"\n         @click=\"cancelClick\"\n         v-show=\"isShowMessage\">\n      <span>取消</span>\n    </div>\n    <div class=\"calculate\" @click=\"calculateClick\">\n      <span>去结算({{checkLength}})</span>\n    </div>\n  </div>\n</template>\n\n<script>\n  import CheckButton from \"../../../components/content/checkButton/CheckButton\";\n\n  import {mapGetters, mapMutations} from 'vuex';\n\n  export default {\n    name: \"CartBottomBar\",\n    props: {\n      isShowMessage: {\n        type: Boolean,\n        default: false\n      }\n    },\n    components: {\n      CheckButton\n    },\n    computed: {\n      ...mapGetters(['cartList']),\n      //1、计算总价\n      totalPrice() {\n        return this.cartList.filter((item) => {\n          return item.checked;\n        }).reduce((preValue, item) => {\n          return preValue + item.realPrice * item.count;\n        }, 0).toFixed(2)\n      },\n      //2、计算选中个数\n      checkLength() {\n        return this.cartList.filter((item) => {\n          return item.checked;\n        }).length;\n      },\n      //3、全选与单选的实现\n      isCheckAll() {\n        //every():一假即假 ，而且只要有一个元素是假，其后面的元素将不再遍历。\n        //some()：一真即真\n        // console.log('AllCheck');\n        if(this.cartList.length === 0) {\n          return false;\n        }\n        //1、使用filter\n        //return !(this.cartList.filter(item => item.checked).length);\n        //2、使用find\n        // return !this.cartList.find(item => item.checked);\n        //3、普通遍历\n        // for(let item of this.cartList) {\n        //   if(!item.checked) {\n        //     return false;\n        //   }\n        // }\n        // return true;\n        return this.cartList.every(item => item.checked);\n      }\n    },\n    methods: {\n      ...mapMutations([\"deleteProduct\"]),\n      //1、全选按钮\n      checkAllClick() {\n        //console.log('checkall');\n        //计算属性isCheckAll为true表示当前为全部选中状态，点击全选那就全部不选中\n        // if(this.isCheckAll) {\n        //   this.cartList.map(item => {\n        //     //修改store里面的数据一定要经过mutations，否则调试插件监控不到\n        //     this.$store.commit('updateChecked', {item, checked: false});\n        //   })\n        // }else {\n        //   this.cartList.map(item => {\n        //     this.$store.commit(\"updateChecked\", {item, checked: true});\n        //   })\n        // }\n        if(this.isCheckAll) { //全部选中\n          this.cartList.forEach(item => item.checked = false);\n        }else { // 部分或钻都不选中\n          this.cartList.forEach(item => item.checked = true);\n        }\n\n      },\n      //2、点击计算按钮\n      calculateClick() {\n        if(!this.isCheckAll) {\n           this.$toast.show('请选择默认的商品', 2000);\n        }\n      },\n      //3、点击取消\n      cancelClick() {\n\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  #bottom-bar {\n    height: 40px;\n    position: fixed;\n    display: flex;\n    bottom: 49px;\n    left: 0;\n    right: 0;\n    /*background-color: #eee;*/\n    box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.3);\n  }\n\n  #bottom-bar .check-content {\n    width:auto;\n    display: flex;\n    flex: 1;\n    line-height:40px;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #bottom-bar .check-content .check-btn {\n    /*width: 20px;*/\n    /*height: 20px;*/\n    /*margin-right: 5px;*/\n    line-height: 20px;\n    display: flex;\n    /*flex: 1;*/\n    /*position: relative;*/\n    /*justify-content: center;*/\n    align-items: center;\n  }\n\n  .price {\n    text-align: center;\n    flex: 2;\n    /*height: 40px;*/\n    line-height: 40px;\n  }\n  .price span {\n    color: var(--color-tint);\n  }\n\n  .calculate {\n    height: 40px;\n    line-height: 40px;\n    background-color: var(--color-high-text);\n    color: #fff;\n    text-align: center;\n    flex: 1;\n  }\n  .price-cancel {\n    color: white;\n    background-color: var(--color-tint);\n  }\n</style>\n"]}]}